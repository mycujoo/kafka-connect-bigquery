    plugins
    {
      id "com.jfrog.artifactory" version "4.8.1"
    }
// BEGIN ALL PROJECTS //
allprojects {
  buildscript {
    repositories {
    	maven {
	        url System.env.ARTIFACTORY_URL
	        credentials {             
	            username = System.env.ARTIFACTORY_USER
	            password = System.env.ARTIFACTORY_PASSWORD
	        }
	        name = "mycujoo-artifactory"
    	}
    }
  }
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'
    
}


artifactory {
    contextUrl = System.env.ARTIFACTORY_URL
    publish {
        repository {
            repoKey = 'data-platform'
            username = System.env.ARTIFACTORY_USER
            password = System.env.ARTIFACTORY_PASSWORD
            maven = true

        }
        defaults {
            publications ('mavenJava')
        }
    }
}

// END ALL PROJECTS

// BEGIN SUBPROJECTS //
subprojects { subproject ->

    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    jar.baseName = subproject.name

    [compileJava, compileTestJava].each {
        it.options.compilerArgs << '-Xlint:unchecked'
    }

    checkstyle {
        configFile = file("${rootDir}/config/checkstyle/google_checks.xml")
        toolVersion = '6.18'
    }

    findbugsMain {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    signing {
        sign configurations.archives
        required {
            gradle.taskGraph.hasTask('uploadArchives')
        }
    }

}
// END SUBPROJECTS

// BEGIN INDIVIDUAL PROJECTS
project(':kcbq-connector') {
    apply plugin: 'jacoco'


    jar {
        manifest {
            attributes  'Implementation-Title': 'Kafka Connect BigQuery Connector',
                        'Implementation-Version': '1.0.0'

        }
    }

    repositories {
        mavenCentral()
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output
                runtimeClasspath += main.output
                srcDir file('src/integration-test/java')
            }
            resources.srcDir file('src/integration-test/resources')
        }
    }

    task integrationTestPrep() {
        dependsOn 'integrationTestTablePrep'
        dependsOn 'integrationTestBucketPrep'
    }

    task integrationTestTablePrep(type: JavaExec) {
        main = 'com.wepay.kafka.connect.bigquery.it.utils.TableClearer'
        classpath = sourceSets.integrationTest.runtimeClasspath
        args findProperty('kcbq_test_keyfile') ?: ''
        args findProperty('kcbq_test_project') ?: ''
        args findProperty('kcbq_test_dataset') ?: ''
        if (findProperty('kcbq_test_tables') != null)
            args findProperty('kcbq_test_tables').split(' ')
    }

    task integrationTestBucketPrep(type: JavaExec) {
        main = 'com.wepay.kafka.connect.bigquery.it.utils.BucketClearer'
        classpath = sourceSets.integrationTest.runtimeClasspath
        args findProperty('kcbq_test_keyfile') ?: ''
        args findProperty('kcbq_test_project') ?: ''
        args findProperty('kcbq_test_bucket') ?: ''
    }

    task integrationTest(type: Test) {
        testClassesDir = sourceSets.integrationTest.output.classesDir
        classpath = sourceSets.integrationTest.runtimeClasspath
    }

    compileIntegrationTestJava.options.compilerArgs << '-Xlint:unchecked'

    configurations {
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    javadoc {
        options.links 'http://docs.oracle.com/javase/8/docs/api/'
        options.links 'http://docs.confluent.io/3.2.0/connect/javadocs/'
        options.links 'http://googlecloudplatform.github.io/google-cloud-java/0.2.7/apidocs/'
        options.links 'https://kafka.apache.org/0100/javadoc/'
        options.links 'https://avro.apache.org/docs/1.8.1/api/java/'
    }

    jacocoTestReport {
        reports {
            html.destination "${buildDir}/reports/jacoco/"
            xml.enabled true
        }
    }

    dependencies {
        compile project(':kcbq-api')

        compile group: 'com.google.cloud', name: 'google-cloud', version: '0.47.0-alpha'
        compile group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '0.9.0'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

        compile group: 'io.debezium', name: 'debezium-core',  version:'0.6.1'

        compile group: 'org.apache.kafka', name: 'connect-api', version: '2.0.0'
        compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0'

        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'
        compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    }

    artifacts {
        archives javadocJar, sourcesJar
    }
}

project('kcbq-api') {
    
    jar {
        manifest {
            attributes  'Implementation-Title': 'Kafka Connect BigQuery API',
                        'Implementation-Version': '1.0.0'
        }
    }

    repositories {
        mavenCentral()
    }

    javadoc {
        options.links 'http://docs.oracle.com/javase/8/docs/api/'
        options.links 'http://docs.confluent.io/3.2.0/connect/javadocs/'
    }

    dependencies {
        compile group: 'com.google.cloud', name: 'google-cloud', version: '0.47.0-alpha'

        compile group: 'org.apache.kafka', name: 'connect-api', version: '2.0.0'
    }

    artifacts {
        archives javadocJar, sourcesJar
    }
}

project('kcbq-confluent') {

    apply plugin: 'distribution'
    
    configurations.all {
        resolutionStrategy {
            // depending on debezium results in us pulling in the most recent kafka version, but we want to use 1.1.1.
            force 'org.apache.kafka:connect-api:2.0.0', 'org.apache.kafka:kafka-clients:2.0.0'
        }
    }

    distributions {
        main {
            baseName = 'kcbq-confluent'
            contents {
                from configurations.runtime, jar
            }
        }
    }

    jar {
        manifest {
            attributes  'Implementation-Title': 'Kafka Connect BigQuery Schema Registry Schema Retriever',
                        'Implementation-Version': '1.0.0'
        }
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }

    repositories {
        mavenCentral()
        maven {
            url 'http://packages.confluent.io/maven'
        }
        jcenter()
        add buildscript.repositories.getByName("mycujoo-artifactory")
    }
    
    artifactory {
      contextUrl = "${ARTIFACTORY_URL}"
      publish {
          repository {
              repoKey = 'data-platform'
              username = "${ARTIFACTORY_USER}"
              password = "${ARTIFACTORY_PASSWORD}"
              maven = true
  
          }       
              defaults {
                  publications ('mavenJava')
              }
          }
      }
    
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact distTar
            }
        }
    }

    javadoc {
        options.links 'http://docs.oracle.com/javase/8/docs/api/'
        options.links 'http://docs.confluent.io/3.2.0/connect/javadocs/'
    }

    dependencies {
        compile project(':kcbq-api')

        compile group: 'com.google.cloud', name: 'google-cloud', version: '0.25.0-alpha'
        compile group: 'com.google.auth', name: 'google-auth-library-oauth2-http', version: '0.9.0'

        compile group: 'io.debezium', name: 'debezium-core',  version:'0.4.0'

        compile group: 'org.apache.kafka', name: 'connect-api', version: '1.0.0'
        compile group: 'org.apache.kafka', name: 'kafka-clients', version: '1.0.0'

        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'
        compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    }

    artifacts {
        archives javadocJar, sourcesJar, distTar
    }

}
// END INDIVIDUAL PROJECTS
